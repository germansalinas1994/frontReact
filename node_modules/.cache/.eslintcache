[{"C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\App.js":"2","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Header.jsx":"3","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Footer.jsx":"4","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\EditarProducto.jsx":"5","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\GetProductosAdministrador.jsx":"6","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\CrearProducto.jsx":"7","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Producto.jsx":"8","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\botonFlotante.jsx":"9","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Sidebar.jsx":"10","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Home.jsx":"11"},{"size":766,"mtime":1694479313593,"results":"12","hashOfConfig":"13"},{"size":1433,"mtime":1694561546126,"results":"14","hashOfConfig":"13"},{"size":1727,"mtime":1694559688491,"results":"15","hashOfConfig":"13"},{"size":5121,"mtime":1693782334049,"results":"16","hashOfConfig":"13"},{"size":12286,"mtime":1693782334049,"results":"17","hashOfConfig":"13"},{"size":7437,"mtime":1694387598188,"results":"18","hashOfConfig":"13"},{"size":12925,"mtime":1694387598188,"results":"19","hashOfConfig":"13"},{"size":2567,"mtime":1694387598190,"results":"20","hashOfConfig":"13"},{"size":579,"mtime":1693782334060,"results":"21","hashOfConfig":"13"},{"size":388,"mtime":1693782334058,"results":"22","hashOfConfig":"13"},{"size":110,"mtime":1694561525371,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"rritfe",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"28"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\index.js",["67","68","69"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './css/styles.css'; //importo el css que cree\r\nimport { Auth0ContextInterface, Auth0Provider } from '@auth0/auth0-react'\r\n\r\nimport App from './App'; //que es lo que se va a renderizar\r\n//importo bootstrap\r\nimport bootstrap from 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider domain={domain} clientId={clientId} redirectUri={window.location.origin}><App /></Auth0Provider>\r\n    \r\n  </React.StrictMode>\r\n);\r\n\r\n",[],"C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\App.js",["70"],[],"import GetProductosAdministrador from './components/GetProductosAdministrador';\r\nimport CrearProducto from './components/CrearProducto';\r\nimport EditarProducto from './components/EditarProducto';\r\nimport Producto from './components/Producto';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport React, { Fragment } from 'react'; //importo para poder usar el fragment \r\nimport Home from './components/Home';\r\n//el fragment es un componente que no se renderiza pero que me permite agrupar elementos\r\n\r\n\r\n\r\nfunction App() {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n\r\n    <Fragment>\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <Header loginWithRedirect={loginWithRedirect}/>\r\n\r\n          <Routes>\r\n            {/* cada ruta tiene dos partes la url y el componente que se va a renderizar */}\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/productosAdmin\" element={<GetProductosAdministrador />} />\r\n            <Route path='/crearProducto' element={<CrearProducto />}></Route>\r\n            <Route path='/editarProducto/:id' element={<EditarProducto />}></Route>\r\n          </Routes>\r\n          \r\n          <Footer />\r\n\r\n        </BrowserRouter>\r\n      </div>\r\n    </Fragment>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Header.jsx",["71","72"],[],"import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport logo from './images/LogoLoQueMastica.png'\r\nimport { Link } from \"react-router-dom\"; //PARA QUE EL LINK FUNCIONE LO TENGO QUE METER EN EL APP.JS DENTRO DEL BROWSER ROUTER\r\nimport titulo from './images/Titulo.png'\r\n// import logo from './logo.png';\r\nimport './css/Header.css';\r\nimport { text } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nfunction Header({loginWithRedirect, ...props}) {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"logo-container header-title\">\r\n                <Link to=\"/\">\r\n                <img src={titulo} alt=\"Título principal de mi sitio web\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"buttons-container\">\r\n                <button id=\"idMarca\" className=\"header-button\">MARCAS</button>\r\n                <button className=\"header-button\">SUCURSALES</button>\r\n                <button className=\"header-button\">TIENDA</button>\r\n                <button className=\"header-button\" >MI CUENTA</button>\r\n                <button onClick={()=>loginWithRedirect()} className=\"header-button\" >LOGIN</button>\r\n            </div>\r\n            <div className=\"mt-1 mb-1\">\r\n                </div>\r\n\r\n            <div className=\"cart-container\">\r\n                \r\n\r\n                <button className=\"cart-button\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} className=\"cart-icon\" />\r\n                    <span className=\"cart-count\">{props.cartCount}</span>\r\n                </button>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Footer.jsx",["73","74","75","76"],[],"import React from 'react';\r\nimport { faEnvelope, faWhatsapp, faInstagram } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './css/Footer.css';\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer-text\">\r\n                © Lo Que Mastica Tu Mascota. Todos los derechos Reservados © 2023\r\n            </div>\r\n            <div className=\"footer-buttons\">\r\n\r\n                <a href=\"mailto:consultas@loquemasticatumascota.com.ar\" className=\"footer-link footer-link-mail\">\r\n\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-envelope\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2Zm13 2.383-4.708 2.825L15 11.105V5.383Zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741ZM1 11.105l4.708-2.897L1 5.383v5.722Z\" />\r\n                    </svg>\r\n                </a>\r\n                <a href=\"https://www.facebook.com/loquemasticatumascota\" className=\"footer-link\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-facebook\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\" />\r\n                    </svg>\r\n                </a>\r\n\r\n                <a href=\"https://api.whatsapp.com/message/2WTQG2QF7APDO1\" className=\"footer-link footer-link-wspp\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-whatsapp\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\r\n                    </svg>\r\n                </a>\r\n                <a href=\"https://www.instagram.com/loquemasticatumascota/\" className=\"footer-link footer-link-instagram\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-instagram\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z\" />\r\n                    </svg>\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\EditarProducto.jsx",["77","78","79","80","81"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"; //el use params me permite obtener el id del producto que quiero editar\r\nimport Swal from 'sweetalert2';\r\nimport { NumericFormat } from 'react-number-format';\r\n\r\nimport GetProductos from \"./GetProductosAdministrador\";\r\n\r\nconst urlUpdateProducto = \"http://localhost:3000/updateProducto/\";\r\nconst urlListadoCategoria = \"http://localhost:3000/getCategorias\"; //url para traer las categorias\r\nconst urlGetProductoById = \"http://localhost:3000/getProducto/\"; //url para traer el producto por id\r\n\r\nconst EditarProducto = () => {\r\n    const [Nombre, SetNombre] = useState(\"\");\r\n    const [Descripcion, SetDescripcion] = useState(\"\");\r\n    const [Precio, SetPrecio] = useState(\"\");\r\n    const [Stock, SetStock] = useState(\"\");\r\n    const [Id_Categoria, SetIdCategoria] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); //obtengo el id del producto que quiero editar\r\n\r\n    const [categorias, setCategorias] = useState([]); //estado para traer las categorias\r\n    useEffect(() => {\r\n        getCategorias();\r\n    }\r\n        , [])\r\n\r\n    //funcion para mostrar las categorias en el select\r\n    const getCategorias = async () => {\r\n        try {\r\n            const res = await axios.get(urlListadoCategoria);\r\n            setCategorias(res.data); //actualizo el estado del componente con los datos que me devuelve la api\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const handleNombreChange = (e) => {\r\n        console.log(Nombre)\r\n        SetNombre(e.target.value);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-nombre\").hidden = true;\r\n        }\r\n    }\r\n\r\n    //funcion para evento de cambio de descripcion\r\n    const handleDescripcionChange = (e) => {\r\n        SetDescripcion(e.target.value);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-descripcion\").hidden = true;\r\n        }\r\n    }\r\n    const handlePrecioChange = (e) => {\r\n        if (document.getElementById(\"Precio\").value == \"\") {\r\n            SetPrecio(0);\r\n            return;\r\n        }\r\n\r\n        const precioValue = parseFloat(e.target.value.replace(/\\$/g, ''));\r\n\r\n        SetPrecio(parseFloat(precioValue));\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-precio\").hidden = true;\r\n        }\r\n    }\r\n    const handleStockChange = (e) => {\r\n\r\n        var stock = parseInt(e.target.value);\r\n        debugger;\r\n        if (stock < 0) {\r\n            document.getElementById(\"error-stock\").hidden = false;\r\n            return;\r\n        }\r\n\r\n        SetStock(e.target.value);\r\n        document.getElementById(\"error-stock\").hidden = true;\r\n\r\n    }\r\n    const handleCategoriaChange = (e) => {\r\n        SetIdCategoria(e.target.value);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-categoria\").hidden = true;\r\n        }\r\n    }\r\n\r\n    const validarFormulario = () => {\r\n        let valida = true;\r\n        debugger;\r\n        if (!Nombre) {\r\n            document.getElementById(\"error-nombre\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (!Descripcion) {\r\n            document.getElementById(\"error-descripcion\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (Precio == null || Precio == 0) {\r\n            document.getElementById(\"error-precio\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (!Stock || Stock < 0) {\r\n            document.getElementById(\"error-stock\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (!Id_Categoria) {\r\n            document.getElementById(\"error-categoria\").hidden = false;\r\n            valida = false;\r\n        }\r\n        return valida;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //funcion para actualizar el producto\r\n\r\n    const actualizarProducto = async (e) => {\r\n        e.preventDefault();\r\n        let valida = validarFormulario();\r\n        if (!valida) {\r\n            // document.getElementById(\"btnGuardar\").disabled = false;\r\n            return;\r\n        }\r\n        else {\r\n\r\n            const confirmResult = await Swal.fire({\r\n                title: '¿Está seguro de editar el producto?',\r\n                text: 'Esta acción no se puede deshacer',\r\n                icon: 'info',\r\n                showCancelButton: true,\r\n                // confirmButtonColor: '#d33',\r\n                // cancelButtonColor: '#3085d6',\r\n                cancelButtonText: 'Cancelar',\r\n                confirmButtonText: 'Aceptar'\r\n\r\n            });\r\n            if (confirmResult.isConfirmed) {\r\n                try {\r\n                    //envio los datos al backend para que los guarde en la base de datos\r\n                    const res = await axios.put(urlUpdateProducto + id, {\r\n                        Nombre,\r\n                        Descripcion,\r\n                        Precio,\r\n                        Stock,\r\n                        Id_Categoria\r\n                    });\r\n                    Swal.fire({\r\n                        title: 'Producto editado',\r\n                        text: 'El producto se editó correctamente',\r\n                        allowOutsideClick: false,\r\n                        icon: 'success',\r\n                        confirmButtonText: 'Aceptar'\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            navigate(\"/\");\r\n                        }\r\n                    });\r\n\r\n                    // console.log(res.data);\r\n                    // navigate(\"/productos\");\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //uso el use effect para traer el producto por id  \r\n    useEffect(() => {\r\n        getProductoById();\r\n    }\r\n        , [])\r\n\r\n    //funcion para mostrar el producto por id, para poder capturarlo en el formulario\r\n    const getProductoById = async () => {\r\n        try {\r\n            const res = await axios.get(urlGetProductoById + id);\r\n            SetNombre(res.data.Nombre);\r\n            SetDescripcion(res.data.Descripcion);\r\n            SetPrecio(res.data.Precio);\r\n            SetStock(res.data.Stock);\r\n            SetIdCategoria(res.data.Id_Categoria);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mt-5\">\r\n\r\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                <h3 className=\"mt-3 mb-1\">Editar Producto</h3>\r\n                <div className=\"mt-1 mb-1\">\r\n                    <Link to=\"/\" className=\"btn btn-primary\">Volver</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"formulario\">\r\n                <div className=\"card-body\">\r\n\r\n                    <form id=\"formProducto\" onSubmit={actualizarProducto} className=\"card-body\">\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label>Nombre</label>\r\n                            {/* <input id=\"Nombre\" name=\"Nombre\" placeholder=\"Ingrese un Nombre\" type=\"text\" className=\"form-control\" onChange={(e) => SetNombre(e.target.value)} /> */}\r\n                            <input id=\"Nombre\" name=\"Nombre\" value={Nombre} placeholder=\"Ingrese un Nombre\" type=\"text\" className=\"form-control\" onChange={handleNombreChange} />\r\n                            <span hidden id=\"error-nombre\" className=\"text-danger\">Debe ingresar un nombre.</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Descripcion</label>\r\n                            {/* <input name=\"Descripcion\" placeholder=\"Ingrese una Descripcion\" type=\"text\" className=\"form-control\" onChange={(e) => SetDescripcion(e.target.value)} /> */}\r\n                            <input name=\"Descripcion\" value={Descripcion} placeholder=\"Ingrese una Descripcion\" type=\"text\" className=\"form-control\" onChange={handleDescripcionChange} />\r\n                            <span hidden id=\"error-descripcion\" className=\"text-danger\">Debe ingresar una descripcion.</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Precio</label>\r\n                            {/* <input name=\"Precio\" placeholder=\"Ingrese un precio\" type=\"text\" className=\"form-control\" pattern=\"[0-9]+([.,][0-9]{1,2})?\" onChange={(e) => SetPrecio(parseFloat(e.target.value))} /> */}\r\n                            {/* <input name=\"Precio\" placeholder=\"Ingrese un precio\" type=\"text\" className=\"form-control\" pattern=\"[0-9]+([.,][0-9]{1,2})?\" onChange={handlePrecioChange} /> */}\r\n                            <NumericFormat\r\n                                name=\"Precio\"\r\n                                id=\"Precio\"\r\n                                placeholder=\"$0.00\"\r\n                                className=\"form-control\"\r\n                                value={Precio}\r\n                                // thousandSeparator={true}\r\n                                prefix={'$'}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                allowNegative={false}\r\n                                onChange={handlePrecioChange}\r\n                            />\r\n                            <span hidden id=\"error-precio\" className=\"text-danger\">Debe ingresar un precio.</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Stock</label>\r\n                            {/* <input name=\"Stock\" placeholder=\"Ingrese un Stock\" type=\"text\" className=\"form-control\" onChange={(e) => SetStock(parseInt(e.target.value))} aria-describedby=\"inputGroupPrepend\" /> */}\r\n                            {/* <input name=\"Stock\" placeholder=\"Ingrese un Stock\" type=\"text\" className=\"form-control\" onChange={handleStockChange} aria-describedby=\"inputGroupPrepend\" /> */}\r\n                            <NumericFormat\r\n                                name=\"Stock\"\r\n                                value={Stock}\r\n                                placeholder=\"Ingrese un Stock\"\r\n                                className=\"form-control\"\r\n                                // thousandSeparator={true}\r\n                                allowNegative={false}\r\n                                onChange={handleStockChange}\r\n                            />\r\n\r\n                            <span hidden id=\"error-stock\" className=\"text-danger\">Debe ingresar un stock válido.</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Categoria</label>\r\n                            {/* <select name=\"Id_Categoria\" className=\"form-select selectize\" onChange={(e) => SetIdCategoria(parseInt(e.target.value))} > */}\r\n                            <select name=\"Id_Categoria\" className=\"form-select selectize\" value={Id_Categoria} onChange={handleCategoriaChange} >\r\n                                <option className=\"placeholder-option\" disabled selected>Seleccione una categoria</option>\r\n                                {\r\n                                    categorias.map((categoria) => (\r\n                                        <option key={categoria.Id} value={categoria.Id}>{categoria.Nombre}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                            <span hidden id=\"error-categoria\" className=\"text-danger\">Debe seleccionar una categoria.</span>\r\n\r\n\r\n                        </div>\r\n\r\n                        <button id=\"btnGuardar\" name=\"btnGuardar\" type=\"submit\" className=\"btn btn-primary center-button\">Guardar</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default EditarProducto;\r\n\r\n","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\GetProductosAdministrador.jsx",[],[],"C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\CrearProducto.jsx",["82","83","84"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport { NumericFormat } from 'react-number-format';\r\n\r\nconst urlCrearProducto = process.env.REACT_APP_API_URL + \"/crearProducto\";\r\nconst urlListadoCategoria = process.env.REACT_APP_API_URL + \"/getCategorias\";\r\nconst urlCargarImagen = process.env.REACT_APP_API_URL + \"/uploadFile\";\r\n\r\n\r\nconst CrearProducto = () => {\r\n\r\n    //TENGO QUE VER LA FORMA DE MANEJAR TODO EL FORMULARIO DE UNA VEZ\r\n\r\n    const [Nombre, SetNombre] = useState(\"\");\r\n    const [Descripcion, SetDescripcion] = useState(\"\");\r\n    const [Precio, SetPrecio] = useState(\"\");\r\n    // const [Stock, SetStock] = useState(\"\");\r\n    const [Id_Categoria, SetIdCategoria] = useState(\"\");\r\n    const [Url_Imagen, SetImagen] = useState(\"\");\r\n    const navigate = useNavigate(); //el usenavigate es para poder navegar entre paginas\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n    useEffect(() => {\r\n        getCategorias();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    //funcion para mostrar todos los productos\r\n    const getCategorias = async () => {\r\n        try {\r\n            const res = await axios.get(urlListadoCategoria);\r\n            setCategorias(res.data); //actualizo el estado del componente con los datos que me devuelve la api\r\n            // console.log(res.data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //funcion para evento de cambio de nombre\r\n\r\n    const handleNombreChange = (e) => {\r\n        console.log(Nombre)\r\n        SetNombre(e.target.value);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-nombre\").hidden = true;\r\n        }\r\n    }\r\n\r\n    //funcion para evento de cambio de descripcion\r\n    const handleDescripcionChange = (e) => {\r\n        SetDescripcion(e.target.value);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-descripcion\").hidden = true;\r\n        }\r\n    }\r\n    const handlePrecioChange = (e) => {\r\n        if (document.getElementById(\"Precio\").value == \"\") {\r\n            SetPrecio(0);\r\n            return;\r\n        }\r\n        const precioValue = parseFloat(e.target.value.replace(/\\$/g, ''));\r\n        SetPrecio(parseFloat(precioValue));\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-precio\").hidden = true;\r\n        }\r\n    }\r\n    // const handleStockChange = (e) => {\r\n        \r\n    //     var stock = parseInt(e.target.value);\r\n    //     if (stock < 0) {\r\n    //         document.getElementById(\"error-stock\").hidden = false;\r\n    //         return;\r\n    //     }\r\n\r\n    //     SetStock(e.target.value);\r\n    //     document.getElementById(\"error-stock\").hidden = true;\r\n\r\n    // }\r\n    const handleCategoriaChange = (e) => {\r\n        SetIdCategoria(e.target.value);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-categoria\").hidden = true;\r\n        }\r\n    }\r\n\r\n    const handleImagenChange = (e) => {\r\n        SetImagen(e.target.files[0]);\r\n        console.log(e.target.files[0]);\r\n        if (e.target.value.length > 0) {\r\n            document.getElementById(\"error-imagen\").hidden = true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //funcion para validar el formulario\r\n    const validarFormulario = () => {\r\n        let valida = true;\r\n        debugger;\r\n        if (!Nombre) {\r\n            document.getElementById(\"error-nombre\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (!Descripcion) {\r\n            document.getElementById(\"error-descripcion\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (Precio == null || Precio == 0) {\r\n            document.getElementById(\"error-precio\").hidden = false;\r\n            valida = false;\r\n        }\r\n        // if (!Stock || Stock < 0) {\r\n        //     document.getElementById(\"error-stock\").hidden = false;\r\n        //     valida = false;\r\n        // }\r\n        if (!Id_Categoria) {\r\n            document.getElementById(\"error-categoria\").hidden = false;\r\n            valida = false;\r\n        }\r\n        if (!Url_Imagen) {\r\n            document.getElementById(\"error-imagen\").hidden = false;\r\n            valida = false;\r\n        }\r\n        return valida;\r\n    }\r\n\r\n\r\n    //procedimiento para guardar los datos del formulario\r\n    const guardarDatos = async (e) => {\r\n\r\n        debugger;\r\n        e.preventDefault();\r\n        // document.getElementById(\"btnGuardar\").disabled = true;\r\n        let valida = validarFormulario();\r\n        if (!valida) {\r\n            // document.getElementById(\"btnGuardar\").disabled = false;\r\n            return;\r\n        }\r\n        else {\r\n            try {\r\n\r\n                //CON ESTO LOGRE HACER QUE SE GUARDE LA IMAGEN EN LA CARPETA UPLOADS Y EL NOMBRE EN LA BASE DE DATOS\r\n                try {\r\n                    const formData = new FormData();\r\n                    formData.append(\"file\", Url_Imagen);\r\n\r\n                    const respuesta = await axios.post(urlCargarImagen, formData);\r\n                    console.log(respuesta);\r\n                    var url = respuesta.data;\r\n\r\n                    if (url == null) {\r\n                        throw \"Error al cargar la imagen\";\r\n                    }\r\n                    debugger;\r\n\r\n                    try {\r\n                        const res = await axios.post(urlCrearProducto, {\r\n                            Nombre,\r\n                            Descripcion,\r\n                            Precio,\r\n                            // Stock,\r\n                            Id_Categoria,\r\n                            Url_Imagen: url\r\n                        });\r\n                        console.log(res);\r\n                        Swal.fire({\r\n                            position: 'center',\r\n                            icon: 'success',\r\n                            allowOutsideClick: false,\r\n                            title: 'Producto creado correctamente',\r\n                            showConfirmButton: true,\r\n\r\n                        }).then((result) => {\r\n                            if (result.isConfirmed) {\r\n                                navigate(\"/\");\r\n\r\n                            }\r\n                        })\r\n\r\n\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        throw error;\r\n                    }\r\n\r\n\r\n\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    document.getElementById(\"btnGuardar\").disabled = false;\r\n\r\n                    throw error;\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card mt-5\">\r\n\r\n            <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                <h3 className=\"mt-3 mb-1\">Crear Producto</h3>\r\n                <div className=\"mt-1 mb-1\">\r\n                    <Link to=\"/\" className=\"btn btn-primary\">Volver</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"formulario\">\r\n                <div className=\"card-body\">\r\n\r\n                    <form id=\"formProducto\" onSubmit={guardarDatos} className=\"card-body\">\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label>Nombre</label>\r\n                            {/* <input id=\"Nombre\" name=\"Nombre\" placeholder=\"Ingrese un Nombre\" type=\"text\" className=\"form-control\" onChange={(e) => SetNombre(e.target.value)} /> */}\r\n                            <input id=\"Nombre\" name=\"Nombre\" placeholder=\"Ingrese un Nombre\" type=\"text\" className=\"form-control\" onChange={handleNombreChange} />\r\n                            <span hidden id=\"error-nombre\" className=\"text-danger\">Debe ingresar un nombre.</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Descripcion</label>\r\n                            {/* <input name=\"Descripcion\" placeholder=\"Ingrese una Descripcion\" type=\"text\" className=\"form-control\" onChange={(e) => SetDescripcion(e.target.value)} /> */}\r\n                            <input name=\"Descripcion\" placeholder=\"Ingrese una Descripcion\" type=\"text\" className=\"form-control\" onChange={handleDescripcionChange} />\r\n                            <span hidden id=\"error-descripcion\" className=\"text-danger\">Debe ingresar una descripcion.</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Precio</label>\r\n                            {/* <input name=\"Precio\" placeholder=\"Ingrese un precio\" type=\"text\" className=\"form-control\" pattern=\"[0-9]+([.,][0-9]{1,2})?\" onChange={(e) => SetPrecio(parseFloat(e.target.value))} /> */}\r\n                            {/* <input name=\"Precio\" placeholder=\"Ingrese un precio\" type=\"text\" className=\"form-control\" pattern=\"[0-9]+([.,][0-9]{1,2})?\" onChange={handlePrecioChange} /> */}\r\n                            <NumericFormat\r\n                                name=\"Precio\"\r\n                                id=\"Precio\"\r\n                                placeholder=\"$0.00\"\r\n                                className=\"form-control\"\r\n                                // thousandSeparator={true}\r\n                                prefix={'$'}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                allowNegative={false}\r\n                                onChange={handlePrecioChange}\r\n                            />\r\n                            <span hidden id=\"error-precio\" className=\"text-danger\">Debe ingresar un precio.</span>\r\n                        </div>\r\n                        {/* <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Stock</label>\r\n                            <NumericFormat\r\n                                name=\"Stock\"\r\n                                placeholder=\"Ingrese un Stock\"\r\n                                className=\"form-control\"\r\n                                // thousandSeparator={true}\r\n                                allowNegative={false}\r\n                                onChange={handleStockChange}\r\n                            />\r\n\r\n                            <span hidden id=\"error-stock\" className=\"text-danger\">Debe ingresar un stock válido.</span>\r\n                        </div> */}\r\n                        <div className=\"form-group mb-3 w-33\">\r\n                            <label className=\"form-label\">Categoria</label>\r\n                            {/* <select name=\"Id_Categoria\" className=\"form-select selectize\" onChange={(e) => SetIdCategoria(parseInt(e.target.value))} > */}\r\n                            <select name=\"Id_Categoria\" className=\"form-select selectize\" onChange={handleCategoriaChange} >\r\n                                <option value=\"\" className=\"placeholder-option\" disabled selected>Seleccione una categoria</option>\r\n                                {\r\n                                    categorias.map((categoria) => (\r\n                                        <option key={categoria.Id} value={categoria.Id}>{categoria.Nombre}</option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                            <span hidden id=\"error-categoria\" className=\"text-danger\">Debe seleccionar una categoria.</span>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3 w-33 mt-4\">\r\n                            <div className=\"mt-3\">\r\n                                <label className=\"form-label\">Imagen</label>\r\n                                <div className=\"input-group\">\r\n                                    {/* <input type=\"file\" className=\"form-control\" id=\"inputGroupFile04\" onChange={(e) => SetImagen(e.target.files[0])} aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\" /> */}\r\n                                    <input type=\"file\" className=\"form-control\" id=\"inputGroupFile04\" onChange={handleImagenChange} aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\" />\r\n\r\n                                </div>\r\n                                <span hidden id=\"error-imagen\" className=\"text-danger\">Debe seleccionar una imagen.</span>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <button id=\"btnGuardar\" name=\"btnGuardar\" type=\"submit\" className=\"btn btn-primary center-button\">Guardar</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default CrearProducto;","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Producto.jsx",["85"],[],"import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from './Sidebar';\r\nimport './css/Productos.css'\r\n\r\n\r\nconst urlServer = process.env.REACT_APP_API_URL;\r\nconst urlGetProductos = process.env.REACT_APP_API_URL + '/getProductos';\r\n\r\n\r\nconst Producto = () => {\r\n  //guardo en const productos el valor del estado y en setProductos la funcion que me permite actualizar el estado\r\n  const [productos, setProductos] = useState([]);\r\n  useEffect(() => {\r\n    getProductos();\r\n  }, [])\r\n\r\n\r\n  const [openSidebar, setOpenSidebar] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setOpenSidebar(!openSidebar);\r\n  }\r\n\r\n  //funcion para mostrar todos los productos\r\n  const getProductos = async () => {\r\n    debugger;\r\n    try {\r\n      const res = await axios.get(urlGetProductos);\r\n      debugger;\r\n      setProductos(res.data); //actualizo el estado del componente con los datos que me devuelve la api\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='productos-container-cliente'>\r\n      {productos.map((producto) => (\r\n        <div className='producto-card-cliente btn' key={producto.Id}>\r\n          <div className='producto-image-container-cliente'>\r\n            <img className='producto-image-cliente' src={urlServer + producto.Url_Imagen} alt={producto.Nombre} />\r\n          </div>\r\n          <div className='producto-info-container-cliente'>\r\n            <h2 className='producto-nombre-cliente'>{producto.Nombre}</h2>\r\n            <p className='producto-descripcion-cliente'>{producto.Descripcion}</p>\r\n            <p className='producto-precio-cliente'>\r\n              Precio: <NumericFormat value={producto.Precio} displayType={'text'} prefix={'$'} thousandSeparator={true} decimalScale={2} fixedDecimalScale={true} />\r\n            </p>\r\n            {/* <p className='producto-stock-cliente'>Stock: {producto.Stock}</p> */}\r\n            <p className='producto-categoria-cliente'>Categoría: {producto.Categoria.Nombre}</p>\r\n            <div className='producto-acciones-cliente'>\r\n              <button className='btn-cliente btn-primary-cliente' onClick={() => toggleSidebar()}>\r\n                <i className='fa-solid fa-cart-plus'></i> Agregar al carrito\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <Sidebar open={openSidebar} toggleSidebar={toggleSidebar} />\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Producto;\r\n\r\n\r\n","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\botonFlotante.jsx",["86"],[],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst FloatingButton = ({ onClick }) => {\r\n    return (\r\n        <div style={{ position: 'fixed', bottom: '50px', right: '50px' }}>\r\n        <Link to='/crearProducto' className='btn btn-primary rounded-circle btn-lg' style={{ backgroundColor: '#ffd800', borderColor: '#ffd800' }}>\r\n          <i className=\"fa-solid fa-plus\" style={{ color: '#FFFFFF', fontSize: '3.0rem' }}></i>\r\n        </Link>\r\n      </div>      \r\n      );\r\n};\r\n\r\nexport default FloatingButton;","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Sidebar.jsx",["87"],[],"import React, { useState } from 'react';\r\nimport './css/Sidebar.css';\r\n\r\n\r\nconst Sidebar = ({ open, toggleSidebar }) => {\r\n    return (\r\n      <div id='sidebar' className={`sidebar ${open ? 'open' : ''}`}>\r\n        <h2>Sidebar</h2>\r\n        <p>Contenido del sidebar</p>\r\n        <button onClick={toggleSidebar}>Cerrar</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Sidebar;\r\n  ","C:\\Users\\Usuario\\Documents\\Seminario Integrador\\Github\\Front\\frontReact\\src\\components\\Home.jsx",[],[],{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":31},{"ruleId":"88","severity":1,"message":"93","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":17},{"ruleId":"88","severity":1,"message":"94","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"95","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":12},{"ruleId":"88","severity":1,"message":"96","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":14},{"ruleId":"88","severity":1,"message":"97","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":20},{"ruleId":"88","severity":1,"message":"98","line":2,"column":22,"nodeType":"90","messageId":"91","endLine":2,"endColumn":32},{"ruleId":"88","severity":1,"message":"99","line":2,"column":34,"nodeType":"90","messageId":"91","endLine":2,"endColumn":45},{"ruleId":"88","severity":1,"message":"100","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":25},{"ruleId":"88","severity":1,"message":"101","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":57,"column":53,"nodeType":"104","messageId":"105","endLine":57,"endColumn":55},{"ruleId":"102","severity":1,"message":"103","line":100,"column":38,"nodeType":"104","messageId":"105","endLine":100,"endColumn":40},{"ruleId":"88","severity":1,"message":"106","line":144,"column":27,"nodeType":"90","messageId":"91","endLine":144,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":178,"column":11,"nodeType":"109","endLine":178,"endColumn":13,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"103","line":65,"column":53,"nodeType":"104","messageId":"105","endLine":65,"endColumn":55},{"ruleId":"102","severity":1,"message":"103","line":116,"column":38,"nodeType":"104","messageId":"105","endLine":116,"endColumn":40},{"ruleId":"111","severity":1,"message":"112","line":160,"column":25,"nodeType":"113","messageId":"114","endLine":160,"endColumn":59},{"ruleId":"88","severity":1,"message":"115","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":14},{"ruleId":"88","severity":1,"message":"116","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":16},{"ruleId":"88","severity":1,"message":"117","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Auth0ContextInterface' is defined but never used.","'bootstrap' is defined but never used.","'Producto' is defined but never used.","'logo' is defined but never used.","'text' is defined but never used.","'faEnvelope' is defined but never used.","'faWhatsapp' is defined but never used.","'faInstagram' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'GetProductos' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProductoById'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'Link' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.",{"desc":"119","fix":"120"},"Update the dependencies array to be: [getProductoById]",{"range":"121","text":"122"},[5989,5991],"[getProductoById]"]