{"ast":null,"code":"var _jsxFileName = \"/Users/germansalinas/Proyectos/Veterinaria/VeterinariaFullStack/Veterinaria.ClienteReact/src/components/GetProductos.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3000/getProductos';\nconst urlElminarProducto = 'http://localhost:3000/eliminarProducto';\n\n//los hooks son funciones que nos permiten usar el estado y otros recursos de react sin escribir una clase\n//son ganchos que nos permiten gestionar el estado de los componentes\n//los estados de los componentes funcionales\n//tenemos dos tipos de componentes, los funcionales y los de clase\n\n//useState es un hook que nos permite usar el estado en los componentes funcionales, devuelve un array con dos elementos, el primero es el valor del estado y el segundo es una funcion que nos permite actualizar el estado\n//useEffect es un hook que nos permite usar el ciclo de vida de los componentes funcionales, es decir, podemos ejecutar codigo cuando se monta el componente, cuando se actualiza o cuando se desmonta\n//useEffect es utilizar efecto secundario, es decir, cuando se monta el componente, cuando se actualiza o cuando se desmonta\n\nconst GetProductos = () => {\n  _s();\n  //guardo en const productos el valor del estado y en setProductos la funcion que me permite actualizar el estado\n  const [productos, setProductos] = useState([]);\n  useEffect(() => {\n    getProductos();\n  }, []);\n\n  //funcion para mostrar todos los productos\n  const getProductos = async () => {\n    try {\n      const res = await axios.get(url);\n      setProductos(res.data); //actualizo el estado del componente con los datos que me devuelve la api\n      debugger;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deleteProducto = async id => {\n    try {\n      const confirmResult = await Swal.fire({\n        title: '¿Está seguro de eliminar el producto?',\n        text: 'Esta acción no se puede deshacer',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Eliminar',\n        cancelButtonText: 'Cancelar'\n      });\n      if (confirmResult.isConfirmed) {\n        await axios.delete(`${urlElminarProducto}/${id}`);\n        Swal.fire({\n          title: 'Producto eliminado',\n          text: 'El producto se eliminó correctamente',\n          icon: 'success',\n          confirmButtonText: 'Aceptar'\n        }).then(result => {\n          if (result.isConfirmed) {\n            getProductos();\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // return (\n  //     <div className='container'>\n  //         <div className='row'>\n  //             <div className='col'>\n  //                 <div className='d-flex justify-content-center'>\n  //                     <Link to='/crearProducto' className='btn btn-primary mt-5 mb-3'><i className=\"fa-solid fa-plus\"></i></Link>\n\n  //                 </div>\n  //                 <table className='table'>\n  //                     <thead className='table-primary'>\n  //                         <tr>\n  //                             <th>Nombre</th>\n  //                             <th>Descripcion</th>\n  //                             <th>Precio</th>\n  //                             <th>Stock</th>\n  //                             <th>Nombre Categoria</th>\n  //                             <th>Descripcion Categoria</th>\n  //                             <th>Acciones</th>\n  //                         </tr>\n  //                     </thead>\n  //                     <tbody>\n  //                         {\n  //                             productos.map((producto) => (                                    \n  //                                 <tr key={producto.Id}>\n  //                                     <td>{producto.Nombre}</td>\n  //                                     <td>{producto.Descripcion}</td>\n  //                                     <td>{producto.Precio}</td>\n  //                                     <td>{producto.Stock}</td>\n  //                                     <td>{producto.Categoria.Nombre}</td>\n  //                                     <td>{producto.Categoria.Descripcion}</td>\n  //                                     <td>\n  //                                         <Link to={`/editarProducto/${producto.Id}`} className='btn btn-info'><i class=\"fa-solid fa-pen-to-square\"></i></Link>\n  //                                         <button className='btn btn-danger' onClick={() => deleteProducto(producto.Id)}><i class=\"fa-sharp fa-solid fa-trash\"></i></button>\n  //                                     </td>\n\n  //                                 </tr>\n  //                             )\n\n  //                             )\n  //                         }\n  //                     </tbody>\n  //                 </table>\n  //             </div>\n  //         </div>\n\n  //     </div>\n  // )\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: productos.map(producto => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"\",\n          src: producto.Url_Imagen,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: producto.Nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: producto.Descripcion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: producto.Precio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: producto.Stock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: producto.Categoria.Nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: producto.Categoria.Descripcion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/editarProducto/${producto.Id}`,\n            className: \"btn btn-info\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa-solid fa-pen-to-square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 94\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => deleteProducto(producto.Id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa-sharp fa-solid fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 104\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, producto.Id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(GetProductos, \"1DSHZPgX73L4Uszt4d22RALz2sY=\");\n_c = GetProductos;\nexport default GetProductos;\nvar _c;\n$RefreshReg$(_c, \"GetProductos\");","map":{"version":3,"names":["axios","useState","useEffect","Link","Swal","jsxDEV","_jsxDEV","url","urlElminarProducto","GetProductos","_s","productos","setProductos","getProductos","res","get","data","error","console","log","deleteProducto","id","confirmResult","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","delete","then","result","className","children","map","producto","src","Url_Imagen","alt","fileName","_jsxFileName","lineNumber","columnNumber","Nombre","Descripcion","Precio","Stock","Categoria","to","Id","class","onClick","_c","$RefreshReg$"],"sources":["/Users/germansalinas/Proyectos/Veterinaria/VeterinariaFullStack/Veterinaria.ClienteReact/src/components/GetProductos.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\n\nconst url = 'http://localhost:3000/getProductos'\nconst urlElminarProducto = 'http://localhost:3000/eliminarProducto'\n\n//los hooks son funciones que nos permiten usar el estado y otros recursos de react sin escribir una clase\n//son ganchos que nos permiten gestionar el estado de los componentes\n//los estados de los componentes funcionales\n//tenemos dos tipos de componentes, los funcionales y los de clase\n\n//useState es un hook que nos permite usar el estado en los componentes funcionales, devuelve un array con dos elementos, el primero es el valor del estado y el segundo es una funcion que nos permite actualizar el estado\n//useEffect es un hook que nos permite usar el ciclo de vida de los componentes funcionales, es decir, podemos ejecutar codigo cuando se monta el componente, cuando se actualiza o cuando se desmonta\n//useEffect es utilizar efecto secundario, es decir, cuando se monta el componente, cuando se actualiza o cuando se desmonta\n\nconst GetProductos = () => {\n    //guardo en const productos el valor del estado y en setProductos la funcion que me permite actualizar el estado\n    const [productos, setProductos] = useState([]);\n    useEffect(() => {\n        getProductos();\n    }, [])\n\n    //funcion para mostrar todos los productos\n    const getProductos = async () => {\n        try {\n            const res = await axios.get(url);\n            setProductos(res.data); //actualizo el estado del componente con los datos que me devuelve la api\n            debugger;\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const deleteProducto = async (id) => {\n        try {\n            const confirmResult = await Swal.fire({\n                title: '¿Está seguro de eliminar el producto?',\n                text: 'Esta acción no se puede deshacer',\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#d33',\n                cancelButtonColor: '#3085d6',\n                confirmButtonText: 'Eliminar',\n                cancelButtonText: 'Cancelar'\n            });\n\n            if (confirmResult.isConfirmed) {\n                await axios.delete(`${urlElminarProducto}/${id}`);\n                Swal.fire({\n                    title: 'Producto eliminado',\n                    text: 'El producto se eliminó correctamente',\n                    icon: 'success',\n                    confirmButtonText: 'Aceptar'\n\n                }\n                ).then((result) => {\n                    if (result.isConfirmed) {\n                        getProductos();\n                    }\n                });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // return (\n    //     <div className='container'>\n    //         <div className='row'>\n    //             <div className='col'>\n    //                 <div className='d-flex justify-content-center'>\n    //                     <Link to='/crearProducto' className='btn btn-primary mt-5 mb-3'><i className=\"fa-solid fa-plus\"></i></Link>\n\n    //                 </div>\n    //                 <table className='table'>\n    //                     <thead className='table-primary'>\n    //                         <tr>\n    //                             <th>Nombre</th>\n    //                             <th>Descripcion</th>\n    //                             <th>Precio</th>\n    //                             <th>Stock</th>\n    //                             <th>Nombre Categoria</th>\n    //                             <th>Descripcion Categoria</th>\n    //                             <th>Acciones</th>\n    //                         </tr>\n    //                     </thead>\n    //                     <tbody>\n    //                         {\n    //                             productos.map((producto) => (                                    \n    //                                 <tr key={producto.Id}>\n    //                                     <td>{producto.Nombre}</td>\n    //                                     <td>{producto.Descripcion}</td>\n    //                                     <td>{producto.Precio}</td>\n    //                                     <td>{producto.Stock}</td>\n    //                                     <td>{producto.Categoria.Nombre}</td>\n    //                                     <td>{producto.Categoria.Descripcion}</td>\n    //                                     <td>\n    //                                         <Link to={`/editarProducto/${producto.Id}`} className='btn btn-info'><i class=\"fa-solid fa-pen-to-square\"></i></Link>\n    //                                         <button className='btn btn-danger' onClick={() => deleteProducto(producto.Id)}><i class=\"fa-sharp fa-solid fa-trash\"></i></button>\n    //                                     </td>\n\n\n    //                                 </tr>\n    //                             )\n\n    //                             )\n    //                         }\n    //                     </tbody>\n    //                 </table>\n    //             </div>\n    //         </div>\n\n\n    //     </div>\n    // )\nreturn(\n    <div className='row'>\n        {productos.map((producto) => (\n            <div key={producto.Id} className='products'>\n                <div className='card'>\n                    <img className='' src={producto.Url_Imagen} alt='' />\n                    <div className='card-body'>\n                        <h5 className='card-title'>{producto.Nombre}</h5>\n                        <p className='card-text'>{producto.Descripcion}</p>\n                        <p className='card-text'>{producto.Precio}</p>\n                        <p className='card-text'>{producto.Stock}</p>\n                        <p className='card-text'>{producto.Categoria.Nombre}</p>\n                        <p className='card-text'>{producto.Categoria.Descripcion}</p>\n                        <Link to={`/editarProducto/${producto.Id}`} className='btn btn-info'><i class=\"fa-solid fa-pen-to-square\"></i></Link>\n                        <button className='btn btn-danger' onClick={() => deleteProducto(producto.Id)}><i class=\"fa-sharp fa-solid fa-trash\"></i></button>\n                    </div>\n                </div>\n            </div>\n        ))}\n    </div>\n\n)\n\n}\n\nexport default GetProductos"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}